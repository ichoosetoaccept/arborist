[project]
name = "arborist"
version = "0.1.0"
description = "A tool for managing Git branches"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
keywords = ["git", "branch", "management"]
authors = [
    { name = "Ismar Iljazovic", email = "ismart@gmail.com" },
]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "gitpython>=3.1.43",
    "pre-commit>=4.0.1",
    "pydantic>=2.10.4",
    "pydantic-settings>=2.7.1",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "typer>=0.15.1",
]

[dependency-groups]
dev = [
    "ruff>=0.3.4",
]

[project.scripts]
arborist = "arborist.cli:app"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=arborist --cov-report=term-missing"

[tool.coverage.run]
source = ["arborist"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.ruff]
line-length = 88
target-version = "py310"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.uv]
package = true
